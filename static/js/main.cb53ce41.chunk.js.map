{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Hweet.js","components/HweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubeAuthProvider","signInWithPopup","icon","faTwitter","size","color","faGoogle","faGithub","Hweet","hweetObj","isOwner","editing","setEditing","text","newHweet","setNewHweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","alt","width","height","faTrashAlt","faEdit","HweetFactory","userObj","hweet","setHweet","attachment","setAttachment","fileInput","useRef","e","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","onClearAttachment","current","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","faTimes","Home","hweets","setHweets","useEffect","orderBy","onSnapshot","snapshot","hweetArray","docs","map","Navigation","to","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb53ce41.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\n\nexport const dbService = firebase.firestore();\n\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <div className=\"authContainer\">\n        <form onSubmit={onSubmit} className=\"authForm\">\n          <input\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"Email\"\n            required\n            value={email}\n            onChange={onChange}\n          />\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            value={password}\n            onChange={onChange}\n          />\n          <input\n            type=\"submit\"\n            value={newAccount ? \"Create Account\" : \"Log In\"}\n          />\n          {error}\n          <span onClick={toggleAccount} className=\"signBtn\">\n            {newAccount ? \"Sign In\" : \"Create Account\"}\n          </span>\n        </form>\n      </div>\n    </>\n  );\n};\nexport default AuthForm;\n","import { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport AuthForm from \"components/AuthForm\";\nimport {\n  faGithub,\n  faGoogle,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubeAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"container\">\n      <FontAwesomeIcon icon={faTwitter} size=\"3x\" color=\"#0fbcf9\" />\n      <AuthForm />\n      <div className=\"socialBtn\">\n        <button onClick={onSocialClick} name=\"google\">\n          Continue with Google\n          <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\">\n          Continue with GitHub\n          <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Hweet = ({ hweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newHweet, setNewHweet] = useState(hweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this hweet?\");\n    if (ok) {\n      await dbService.doc(`hweets/${hweetObj.id}`).delete();\n      if (hweetObj.attachmentUrl) {\n        await storageService.refFromURL(hweetObj.attachmentUrl).delete();\n      }\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`hweets/${hweetObj.id}`).update({\n      text: newHweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewHweet(value);\n  };\n  return (\n    <div className=\"hweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <div className=\"editingContainer\">\n              <form onSubmit={onSubmit}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit your hweet\"\n                  value={newHweet}\n                  onChange={onChange}\n                  required\n                  className=\"editInput\"\n                />\n                <div className=\"updateBtnContainer\">\n                  <input\n                    type=\"submit\"\n                    value=\"Update Hweet\"\n                    className=\"updateBtn\"\n                  />\n                  <button onClick={toggleEditing} className=\"updateCancleBtn\">\n                    Cancle\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{hweetObj.text}</h4>\n          {hweetObj.attachmentUrl && (\n            <img\n              src={hweetObj.attachmentUrl}\n              alt={hweetObj.attachmentUrl}\n              width=\"50px\"\n              height=\"50px\"\n            />\n          )}\n          {isOwner && (\n            <div className=\"editBtnContainer\">\n              <button onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrashAlt} />\n              </button>\n              <button onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faEdit} />\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\nexport default Hweet;\n","import React, { useState, useRef } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"fbase\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst HweetFactory = ({ userObj }) => {\n  const [hweet, setHweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const fileInput = useRef();\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const hweetObj = {\n      text: hweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"hweets\").add(hweetObj);\n    setHweet(\"\");\n    onClearAttachment();\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setHweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => {\n    fileInput.current.value = null;\n    setAttachment(\"\");\n  };\n  return (\n    <form onSubmit={onSubmit} className=\"hweetForm\">\n      <div className=\"factoryInput_container\">\n        <input\n          value={hweet}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n          onChange={onChange}\n          className=\"hweetInput\"\n        />\n        <input type=\"submit\" value=\"→\" id=\"hweetBtn\" />\n      </div>\n      <label htmlFor=\"addPhoto\">\n        <span>\n          Add Photo <FontAwesomeIcon icon={faPlus} />\n        </span>\n      </label>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        ref={fileInput}\n        id=\"addPhoto\"\n      />\n      {attachment && (\n        <div className=\"photoContainer\">\n          <img src={attachment} alt={attachment} width=\"50px\" height=\"50px\" />\n          <button onClick={onClearAttachment}>\n            Remove <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default HweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport Hweet from \"components/Hweet\";\nimport HweetFactory from \"components/HweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [hweets, setHweets] = useState([]);\n\n  useEffect(() => {\n    dbService\n      .collection(\"hweets\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const hweetArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setHweets(hweetArray);\n      });\n  }, []);\n\n  return (\n    <div className=\"homeContainer\">\n      <HweetFactory userObj={userObj} />\n      <div className=\"hweetContainer\">\n        {hweets.map((hweet) => (\n          <Hweet\n            key={hweet.id}\n            hweetObj={hweet}\n            isOwner={hweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">\n          <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link to=\"/profile\">\n          <FontAwesomeIcon icon={faUser} size=\"2x\" />\n          <div>{userObj.displayName}의 Profile</div>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n    refreshUser();\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({ displayName: newDisplayName });\n    }\n    refreshUser();\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  return (\n    <div className=\"profileContainer\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display Name\"\n          value={newDisplayName}\n          className=\"profileInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"profileSubmitBtn\"\n        />\n        <div>\n          <button onClick={onLogOutClick}>Log Out</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile refreshUser={refreshUser} userObj={userObj} />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    if (user) {\n      setUserObj({\n        displayName: user.displayName,\n        uid: user.uid,\n        updateProfile: (args) => user.updateProfile(args),\n      });\n    } else {\n      setUserObj(null);\n    }\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing....\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}